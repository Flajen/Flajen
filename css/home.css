.home-title {
  max-width: 832px;
  font-size: 55px;
  font-weight: 400;
  margin-bottom: 21px;
  line-height: 135%;
}
.home-subtitle {
  font-size: 20px;
  margin-bottom: 150px;
}
.home-main_card {
  display: block;
  margin-bottom: 30px;
}
.home-cards {
  display: grid;
  grid-gap: 30px 28px;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: 375px;
  margin-bottom: 80px;
}
.home_card-img {
  width: 100%;
  height: 100%;
}

.home-link {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  color: #000;
  border: 1px solid #000000;
  border-radius: 100px;
  width: 200px;
  background-color: transparent;
  padding: 26px 5px 23px 5px;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
  transition: color 1.5s;
  white-space: nowrap;
  text-align: center;
}
.home-link:before {
  content: "";
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0);
  z-index: -1;
  background-color: #000000;
  height: 200px;
  width: 300px;
  bottom: 110%;
  border-radius: 50%;
  transition: all 1.4s;
}
.home-link:hover {
  color: #fff;
}
.home-link:hover:before {
  bottom: -110%;
}

/* .button {
  --background: #275efe;
  --text: #fff;
  --font-size: 16px;
  --duration: 0.44s;
  --move-hover: -4px;
  --shadow: 0 2px 8px -1px #{rgba(#275efe, 0.32)};
  --shadow-hover: 0 4px 20px -2px #{rgba(#275efe, 0.5)};
  --font-shadow: var(--font-size);
  padding: 16px 32px;
  font-family: "Roboto";
  font-weight: 500;
  line-height: var(--font-size);
  border-radius: 24px;
  display: block;
  outline: none;
  text-decoration: none;
  font-size: var(--font-size);
  letter-spacing: 0.5px;
  background: var(--background);
  color: var(--text);
  box-shadow: var(--shadow);
  transform: translateY(var(--y)) translateZ(0);
  transition: transform var(--duration) ease, box-shadow var(--duration) ease;
  div {
    display: flex;
    overflow: hidden;
    text-shadow: 0 var(--font-shadow) 0 var(--text);
    span {
      display: block;
      backface-visibility: hidden;
      font-style: normal;
      transition: transform var(--duration) ease;
      transform: translateY(var(--m)) translateZ(0);
      $i: 1;
      @while $i < 12 {
        &:nth-child(#{$i}) {
          transition-delay: $i / 20 + s;
        }
        $i: $i + 1;
      }
    }
  }
  &:hover {
    --y: var(--move-hover);
    --shadow: var(--shadow-hover);
    span {
      --m: calc(var(--font-size) * -1);
    }
  }
  &.reverse {
    --font-shadow: calc(var(--font-size) * -1);
    &:hover {
      span {
        --m: calc(var(--font-size));
      }
    }
  }
} */
